<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>这是第一篇文章</title>
    <link href="/blog/2020/11/23/%E8%BF%99%E6%98%AF%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/blog/2020/11/23/%E8%BF%99%E6%98%AF%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<p>从上大学时就开始自己捣鼓博客，之前的博客一直都是 <code>WordPress</code>, 本站是第一次使用 hexo 创建的静态站，记录生活，附加技术。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>post title with whitespace</title>
    <link href="/blog/2020/11/17/post-title-with-whitespace/"/>
    <url>/blog/2020/11/17/post-title-with-whitespace/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-new-“post-title-with-whitespace”"><a href="#hexo-new-“post-title-with-whitespace”" class="headerlink" title="hexo new “post title with whitespace”"></a>hexo new “post title with whitespace”</h2><h2 id="first-world"><a href="#first-world" class="headerlink" title="first world"></a>first world</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/blog/2020/10/24/hello-world/"/>
    <url>/blog/2020/10/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>尝鲜 Vue3.0 组合式API</title>
    <link href="/blog/2020/09/06/%E5%B0%9D%E9%B2%9CVue3.0%E7%BB%84%E5%90%88%E5%BC%8FAPI/"/>
    <url>/blog/2020/09/06/%E5%B0%9D%E9%B2%9CVue3.0%E7%BB%84%E5%90%88%E5%BC%8FAPI/</url>
    
    <content type="html"><![CDATA[<p>Vue 3.0 即将发布，我们已经可以尝试一些新版本中带来的新功能，比如 Composition-API 组合式API。如果你了解过 React 的 Hooks，那么当你看到组合式API时一定不会感到陌生。组合式API受到了 React Hooks 很大的启发。</p><p>Vue 非常易于使用，并且有非常出色的 API，对于初学者来说配合官方文档很容易就可以理解 Vue 的语法。但在国内一些大型的项目可能不会首选 Vue 去开发，因为当组件越来越大的时候会变得很难维护，很难找到一个变量在哪被定义又是在哪被使用。Vue2 中也有一些解决方法，比如mixin、HOC、作用域插槽等等，但是都不能非常完美的去解决这个问题。</p><p>说到 mixin，其实 mixin 非常简单，我们可以通过它来把一些公共的数据、方法等等进行抽离后合并到一个组件。但当项目中的 mixin 越来越多的时候你就会发现命名冲突的可能性会变得很大，某些状态和方法的来源恨不清晰。</p><p>组合式API可以很完美的解决这个问题。</p><h2 id="Demo1"><a href="#Demo1" class="headerlink" title="Demo1"></a>Demo1</h2><p>可以使用 Vue-CLI 搭建一个 Vue3 的项目，也可以直接下载 <code>@vue/composition-api</code> 包来使用。</p><pre><code class="hljs shell">npm i @vue/composition-api</code></pre><p>在 <code>main.js</code> 文件中 use 组合式API：</p><pre><code class="hljs js"><span class="hljs-keyword">import</span> compositionApi <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vue/composition-api&#x27;</span>;Vue.use(compositionApi);</code></pre><p>从一个计数器的小案例开始。新建一个 Count.vue ：</p>]]></content>
    
    
    
    <tags>
      
      <tag>vue3</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
